name: Create Release

on:
    push:
        tags-ignore:
            - testing_*

jobs:
    build:
        runs-on: windows-latest
        steps:
            - uses: actions/checkout@v2
              with:
                  submodules: recursive
            - name: Setup .NET
              uses: actions/setup-dotnet@v1
              with:
                  dotnet-version: '9.x.x'
            - name: Restore dependencies
              run: dotnet restore
            - name: Download Dalamud
              run: |
                  Invoke-WebRequest -Uri https://goatcorp.github.io/dalamud-distrib/stg/latest.zip -OutFile latest.zip
                  Expand-Archive -Force latest.zip "$env:AppData\XIVLauncher\addon\Hooks\dev"
            - name: Build
              run: |
                  $ver = '${{ github.ref_name }}'
                  invoke-expression 'dotnet build --no-restore --configuration Release --nologo -p:Version=$ver -p:FileVersion=$ver -p:AssemblyVersion=$ver'
            - name: write version into jsons
              run: |
                  $ver = '${{ github.ref_name }}'
                  $path = './ResStackCounter/bin/Release/ResStackCounter.json'
                  $json = Get-Content -Raw $path | ConvertFrom-Json
                  $json.AssemblyVersion = $ver
                  $content = $json | ConvertTo-Json
                  set-content -Path $path -Value $content
            - name: Archive
              run: Compress-Archive -Path ResStackCounter/bin/Release/* -DestinationPath ResStackCounter.zip
            - name: Upload a Build Artifact
              uses: actions/upload-artifact@v4
              with:
                  path: |
                      ./ResStackCounter/bin/Release/*
            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ github.ref }}
                  release_name: ResStackCounter ${{ github.ref }}
                  draft: false
                  prerelease: false
            - name: Upload Release Asset
              id: upload-release-asset
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
                  asset_path: ./ResStackCounter.zip
                  asset_name: ResStackCounter.zip
                  asset_content_type: application/zip

